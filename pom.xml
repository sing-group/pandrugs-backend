<!--

    This file is part of PanDrugsDB Backend.

    PanDrugsDB Backend is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    PanDrugsDB Backend is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with PanDrugsDB Backend.  If not, see <http://www.gnu.org/licenses/>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.uvigo.ei.sing</groupId>
	<artifactId>pandrugsdb-backend</artifactId>
	<name>PanDrugsDB Backend</name>
	<inceptionYear>2015</inceptionYear>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<developers>
		<developer>
			<name>Miguel Reboiro-Jato</name>
			<organization>SING Group - University of Vigo</organization>
			<organizationUrl>http://sing.ei.uvigo.es/</organizationUrl>
			<email>mrjato@uvigo.es</email>
		</developer>
		<developer>
			<name>Daniel Glez-Peña</name>
			<organization>SING Group - University of Vigo</organization>
			<organizationUrl>http://sing.ei.uvigo.es/</organizationUrl>
			<email>dgpena@uvigo.es</email>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Fátima Al-Shahrour</name>
			<organization>CNIO</organization>
			<organizationUrl>https://www.cnio.es</organizationUrl>
			<email>falshahrour@cnio.es</email>
			<roles>
				<role>Principal Investigator</role>
			</roles>
		</contributor>
		<contributor>
			<name>Elena Piñeiro</name>
			<organization>CNIO</organization>
			<organizationUrl>https://www.cnio.es</organizationUrl>
			<email>epineiro@cnio.es</email>
			<roles>
				<role>Researcher</role>
			</roles>
		</contributor>
	</contributors>

	<licenses>
		<license>
			<name>GNU GENERAL PUBLIC LICENSE, Version 3</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<pluginRepositories>
		<pluginRepository>
			<id>miredot</id>
			<name>MireDot Releases</name>
			<url>http://nexus.qmino.com/content/repositories/miredot</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>miredot</id>
			<name>Miredot Releases</name>
			<url>http://nexus.qmino.com/content/repositories/miredot</url>
		</repository>
		<repository>
				<id>sing-repository</id>
				<name>SING repository</name>
				<url>http://sing.ei.uvigo.es/maven2</url>
		</repository>
	</repositories>

	<properties>
		<!-- General -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Plugins -->
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<maven-compiler-plugin.version>3.5</maven-compiler-plugin.version>
		<license-maven-plugin.version>1.8</license-maven-plugin.version>
		<jacoco-maven-plugin.version>0.7.5.201505241946</jacoco-maven-plugin.version>
		<maven-surefire-plugins.version>2.19.1</maven-surefire-plugins.version>
		<miredot-plugin.version>1.6.0</miredot-plugin.version>
		<tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
		<maven-jxr-plugin.version>2.5</maven-jxr-plugin.version>

		<!-- license-maven-plugin configuration -->
		<license.licenseName>gpl_v3</license.licenseName>
		<license.copyrightOwners>Fátima Al-Shahrour, Elena Piñeiro, Daniel Glez-Peña and Miguel Reboiro-Jato</license.copyrightOwners>
		<license.organizationName>CNIO and SING Group (University of Vigo)</license.organizationName>
		<license.addJavaLicenseAfterPackage>false</license.addJavaLicenseAfterPackage>

		<!-- Dependencies -->
		<spring.version>4.3.3.RELEASE</spring.version>
		<servlet-api.version>3.1.0</servlet-api.version>
		<hibernate.version>5.2.3.Final</hibernate.version>
		<hibernate.validator.version>5.3.0.Final</hibernate.validator.version>
		<jersey.version>2.24</jersey.version>
		<miredot-annotations.version>1.5.0</miredot-annotations.version>
		<mysql.version>5.1.34</mysql.version>
		<logback.version>1.1.2</logback.version>
		<jcloverslf4j.version>1.7.10</jcloverslf4j.version>
		<mail.version>1.5.2</mail.version>
		<activation.version>1.1.1</activation.version>
		<commons-io.version>2.4</commons-io.version>
		<vcfparser.version>1.2-SNAPSHOT</vcfparser.version>
		<commons-lang.version>2.6</commons-lang.version>

		<!-- Testing dependencies -->
		<junit.version>4.12</junit.version>
		<hamcrest.version>2.0.0.0</hamcrest.version>
		<powermock.version>1.6.5</powermock.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<dbunit.version>2.5.0</dbunit.version>
		<hsqldb.version>2.3.4</hsqldb.version>
		<springtestdbunit.version>1.3.0</springtestdbunit.version>
		<easymock.version>3.4</easymock.version>
		<guava-collections.version>r03</guava-collections.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>es.uvigo.ei.sing</groupId>
			<artifactId>vcfparser</artifactId>
			<version>${vcfparser.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet-api.version}</version>
		</dependency>
		<!-- Jersey-Spring -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-web</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.hk2.external</groupId>
					<artifactId>bean-validator</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>com.qmino</groupId>
			<artifactId>miredot-annotations</artifactId>
			<version>${miredot-annotations.version}</version>
		</dependency>

		<!-- Spring 3 dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- MySQL JDBC connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
			<!-- scope>provided</scope -->
		</dependency>

		<!-- Javax Mail -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>${mail.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>${activation.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- JPA/Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- LogBack dependencies -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${jcloverslf4j.version}</version>
		</dependency>

		<!-- Utilities -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>java-hamcrest</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.test-framework.providers</groupId>
			<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
			<version>${jersey.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>${springtestdbunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>${easymock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava-collections</artifactId>
			<version>${guava-collections.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-report-plugin.version}</version>
				<reportSets>
					<reportSet>
						<id>integration-tests</id>
						<reports>
							<report>failsafe-report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-jxr-plugin</artifactId>
	            <version>${maven-jxr-plugin.version}</version>
	        </plugin>
		</plugins>
	</reporting>

	<build>
		<finalName>pandrugsdb-backend</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<version>${maven-war-plugin.version}</version>
				<configuration>
					<warName>pandrugsdb-backend</warName>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<inherited>true</inherited>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${license-maven-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>coverage-report-integration</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugins.version}</version>
				<configuration>
					<includes>
						<includes>es/uvigo/ei/sing/pandrugsdb/suite/UnitTestSuite.java</includes>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-surefire-plugins.version}</version>
				<configuration>
					<includes>
						<includes>es/uvigo/ei/sing/pandrugsdb/suite/IntegrationTestSuite.java</includes>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>default-integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven-surefire-plugins.version}</version>

				<executions>
					<execution>
						<id>test-report</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
					<execution>
						<id>integration-test-report</id>
						<phase>integration-test</phase>
						<goals>
							<goal>report-only</goal>
							<goal>failsafe-report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.qmino</groupId>
				<artifactId>miredot-plugin</artifactId>
				<version>${miredot-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>restdoc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<licence>${miredot.license.pandrugsdb}</licence>
					<!-- insert other configuration here (optional) -->
					<restModel>
						<httpStatusCodes>
							<httpStatusCode>
								<httpCode>200</httpCode>
								<document>always</document>
								<defaultMessage>The service call has completed successfully.</defaultMessage>
							</httpStatusCode>
							<httpStatusCode>
								<httpCode>400</httpCode>
								<document>explicit: javax.ws.rs.BadRequestException</document>
								<defaultMessage>The information provided was not expected or some parts where missing.</defaultMessage>
							</httpStatusCode>
							<httpStatusCode>
								<httpCode>404</httpCode>
								<document>explicit: javax.ws.rs.NotFoundException</document>
								<defaultMessage>The resource requested could not be found.</defaultMessage>
							</httpStatusCode>
							<httpStatusCode>
								<httpCode>415</httpCode>
								<document>put,post</document>
								<defaultMessage>Invalid JSON/XML input.</defaultMessage>
							</httpStatusCode>
							<httpStatusCode>
								<httpCode>500</httpCode>
								<document>always</document>
								<defaultMessage>An unexpected error has happened while resolving the request.</defaultMessage>
							</httpStatusCode>
							<httpStatusCode>
								<httpCode>403</httpCode>
								<document>explicit: javax.ws.rs.ForbiddenException</document>
								<defaultMessage>The given credentials do not allow to perform the request.</defaultMessage>
							</httpStatusCode>
						</httpStatusCodes>
					</restModel>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat7-maven-plugin.version}</version>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
					<dependency>
						<groupId>com.sun.mail</groupId>
						<artifactId>javax.mail</artifactId>
						<version>${mail.version}</version>
					</dependency>
					<dependency>
						<groupId>javax.activation</groupId>
						<artifactId>activation</artifactId>
						<version>${activation.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<port>9080</port>
					<path>/pandrugsdb-backend</path>
					<contextFile>src/main/webapp/META-INF/context.xml</contextFile>
					<useTestClasspath>false</useTestClasspath>
					<path>/${project.build.finalName}</path>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.4.201502262128,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
